[{"F:\\projects\\react\\moviedb\\src\\index.js":"1","F:\\projects\\react\\moviedb\\src\\App.js":"2","F:\\projects\\react\\moviedb\\src\\reportWebVitals.js":"3","F:\\projects\\react\\moviedb\\src\\models\\actor.js":"4","F:\\projects\\react\\moviedb\\src\\models\\Actor.js":"5","F:\\projects\\react\\moviedb\\src\\components\\ActorCard.js":"6","F:\\projects\\react\\moviedb\\src\\components\\CardArray.js":"7","F:\\projects\\react\\moviedb\\src\\components\\MovieCard.js":"8","F:\\projects\\react\\moviedb\\src\\models\\Movie.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":884,"mtime":1609431009005,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":592,"mtime":1609159629046,"results":"14","hashOfConfig":"11"},{"size":592,"mtime":1609159629046,"results":"15","hashOfConfig":"11"},{"size":498,"mtime":1609409001975,"results":"16","hashOfConfig":"11"},{"size":2123,"mtime":1609422719320,"results":"17","hashOfConfig":"11"},{"size":321,"mtime":1609431168708,"results":"18","hashOfConfig":"11"},{"size":250,"mtime":1609430944862,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"g793vt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\projects\\react\\moviedb\\src\\index.js",[],["42","43"],"F:\\projects\\react\\moviedb\\src\\App.js",["44","45","46"],"import './App.css';\nimport CardArray from \"./components/CardArray\";\nimport MovieCard from \"./components/MovieCard\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nfunction App() {\n  const [movies,setMovies]=  React.useState([]);\n  const [contents,setContents]=React.useState(null);\n  \n\n\n useEffect ( ()=> {\n  axios.get(\"movies.json\").then(res => { setMovies (res.data ); setContents(movies.map((Movie, index) => <MovieCard   key={index} movie={Movie}  />));\n   console.log(\"a app\",res.data);})\n},[contents!=null]) ;\nconsole.log(contents);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"> \n      \n      <CardArray  />\n      <h1>Movies:</h1> \n      <h1>Will be in a diffrent page soon!</h1>\n     {movies.length!=0? contents :\"loading\"}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\projects\\react\\moviedb\\src\\reportWebVitals.js",[],"F:\\projects\\react\\moviedb\\src\\models\\actor.js",[],"F:\\projects\\react\\moviedb\\src\\models\\Actor.js",[],["47","48"],"F:\\projects\\react\\moviedb\\src\\components\\ActorCard.js",[],"F:\\projects\\react\\moviedb\\src\\components\\CardArray.js",["49","50"],"import ActorCard from  \"./ActorCard\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nfunction CardArray(props)\r\n{\r\n    const FNAME=0;\r\n    const LNAME=1;\r\n    const [actors, setActors] = React.useState([]);\r\n    const [searchType, setsearchType] = React.useState(FNAME);\r\n    let carRows;\r\n    function refresh() \r\n    {\r\n      axios.get(\"actors.json\").then(res=>{\r\n        console.log(res.data);\r\n        setActors(res.data);\r\n        carRows = actors.map((actor, index) => <ActorCard   key={index} Actor={actor}  />);\r\n         \r\n      });\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n      axios.get(\"actors.json\").then(res=>{\r\n        console.log(res.data);\r\n        setActors(res.data);\r\n        carRows = actors.map((actor, index) => <ActorCard   key={index} Actor={actor}  />);\r\n         \r\n      });\r\n  }, []);\r\n\r\n  function filters(a,b)\r\n  {\r\n    \r\n    let tmp=[];\r\n    let str;\r\n    let n;\r\n    if (b.length===0) \r\n    {\r\n        refresh();\r\n        return;\r\n    }\r\n\r\n    for (let i=0;i<a.length;++i)\r\n    {\r\n      str=searchType==FNAME?a[i].fname:a[i].lname;\r\n      n=String(str).toLowerCase();\r\n      var b1=String(b).toLowerCase();\r\n      if (n.includes(b1)) \r\n      {\r\n        tmp.push(a[i]);\r\n      }\r\n      setactors(tmp);\r\n      console.log(tmp);\r\n    }\r\n  }\r\n\r\n  function handleChanges(e)\r\n  {\r\n    filters(actors,e.target.value);\r\n    carRows = actors.map((actor, index) => <ActorCard   key={index} Actor={actor}  />);\r\n  }\r\n\r\n    const handleFilterChanges=(e) => {\r\n        let n=e.target.value;\r\n        setsearchType(n);\r\n    };\r\n\r\n  function setactors(obj)\r\n  {\r\n    setActors(obj);\r\n  }\r\n    carRows = actors.map((actor, index) => <ActorCard   key={index} Actor={actor}  />);\r\n    return ( \r\n    <div>\r\n        <h3>Search Actor</h3>\r\n        <div> <input type=\"text\" onChange={handleChanges}/>  </div> \r\n        <p>Filter Type <select onChange={handleFilterChanges}><option value={FNAME} >First Name</option> <option value={LNAME}>Last Name</option> </select></p>\r\n        <h1>Actors</h1>\r\n    <Row> {carRows}</Row> </div>);\r\n}\r\n\r\n\r\nexport default CardArray;","F:\\projects\\react\\moviedb\\src\\components\\MovieCard.js",[],"F:\\projects\\react\\moviedb\\src\\models\\Movie.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":16,"column":3,"nodeType":"58","endLine":16,"endColumn":19,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":16,"column":4,"nodeType":"61","endLine":16,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":25,"column":20,"nodeType":"61","messageId":"64","endLine":25,"endColumn":22},{"ruleId":"52","replacedBy":"65"},{"ruleId":"54","replacedBy":"66"},{"ruleId":"56","severity":1,"message":"67","line":26,"column":19,"nodeType":"68","endLine":26,"endColumn":91},{"ruleId":"62","severity":1,"message":"69","line":45,"column":21,"nodeType":"61","messageId":"64","endLine":45,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":1,"column":7,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setContents' needs the current value of 'movies'.","ArrayExpression",["76"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression","eqeqeq","Expected '!==' and instead saw '!='.","unexpected",["74"],["75"],"Assignments to the 'carRows' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","Expected '===' and instead saw '=='.","no-unused-vars","'Movie' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [movies]",{"range":"79","text":"80"},[565,581],"[movies]"]