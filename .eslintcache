[{"F:\\projects\\react\\moviedb\\src\\index.js":"1","F:\\projects\\react\\moviedb\\src\\App.js":"2","F:\\projects\\react\\moviedb\\src\\reportWebVitals.js":"3","F:\\projects\\react\\moviedb\\src\\models\\actor.js":"4","F:\\projects\\react\\moviedb\\src\\models\\Actor.js":"5","F:\\projects\\react\\moviedb\\src\\components\\ActorCard.js":"6","F:\\projects\\react\\moviedb\\src\\components\\CardArray.js":"7","F:\\projects\\react\\moviedb\\src\\components\\MovieCard.js":"8","F:\\projects\\react\\moviedb\\src\\models\\Movie.js":"9","F:\\projects\\react\\moviedb\\src\\pages\\home.js":"10","F:\\projects\\react\\moviedb\\src\\pages\\Home.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":2196,"mtime":1609674069442,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":592,"mtime":1609159629046,"results":"16","hashOfConfig":"13"},{"size":592,"mtime":1609159629046,"results":"17","hashOfConfig":"13"},{"size":498,"mtime":1609409001975,"results":"18","hashOfConfig":"13"},{"size":2123,"mtime":1609422719320,"results":"19","hashOfConfig":"13"},{"size":321,"mtime":1609431168708,"results":"20","hashOfConfig":"13"},{"size":250,"mtime":1609430944862,"results":"21","hashOfConfig":"13"},{"size":316,"mtime":1609675343461,"results":"22","hashOfConfig":"13"},{"size":316,"mtime":1609675343461,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"g793vt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\projects\\react\\moviedb\\src\\index.js",[],["49","50"],"F:\\projects\\react\\moviedb\\src\\App.js",["51","52","53","54","55"],"F:\\projects\\react\\moviedb\\src\\reportWebVitals.js",[],"F:\\projects\\react\\moviedb\\src\\models\\actor.js",[],"F:\\projects\\react\\moviedb\\src\\models\\Actor.js",[],["56","57"],"F:\\projects\\react\\moviedb\\src\\components\\ActorCard.js",[],"F:\\projects\\react\\moviedb\\src\\components\\CardArray.js",["58","59"],"import ActorCard from  \"./ActorCard\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nfunction CardArray(props)\r\n{\r\n    const FNAME=0;\r\n    const LNAME=1;\r\n    const [actors, setActors] = React.useState([]);\r\n    const [searchType, setsearchType] = React.useState(FNAME);\r\n    let carRows;\r\n    function refresh() \r\n    {\r\n      axios.get(\"actors.json\").then(res=>{\r\n        console.log(res.data);\r\n        setActors(res.data);\r\n        carRows = actors.map((actor, index) => <ActorCard   key={index} Actor={actor}  />);\r\n         \r\n      });\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n      axios.get(\"actors.json\").then(res=>{\r\n        console.log(res.data);\r\n        setActors(res.data);\r\n        carRows = actors.map((actor, index) => <ActorCard   key={index} Actor={actor}  />);\r\n         \r\n      });\r\n  }, []);\r\n\r\n  function filters(a,b)\r\n  {\r\n    \r\n    let tmp=[];\r\n    let str;\r\n    let n;\r\n    if (b.length===0) \r\n    {\r\n        refresh();\r\n        return;\r\n    }\r\n\r\n    for (let i=0;i<a.length;++i)\r\n    {\r\n      str=searchType==FNAME?a[i].fname:a[i].lname;\r\n      n=String(str).toLowerCase();\r\n      var b1=String(b).toLowerCase();\r\n      if (n.includes(b1)) \r\n      {\r\n        tmp.push(a[i]);\r\n      }\r\n      setactors(tmp);\r\n      console.log(tmp);\r\n    }\r\n  }\r\n\r\n  function handleChanges(e)\r\n  {\r\n    filters(actors,e.target.value);\r\n    carRows = actors.map((actor, index) => <ActorCard   key={index} Actor={actor}  />);\r\n  }\r\n\r\n    const handleFilterChanges=(e) => {\r\n        let n=e.target.value;\r\n        setsearchType(n);\r\n    };\r\n\r\n  function setactors(obj)\r\n  {\r\n    setActors(obj);\r\n  }\r\n    carRows = actors.map((actor, index) => <ActorCard   key={index} Actor={actor}  />);\r\n    return ( \r\n    <div>\r\n        <h3>Search Actor</h3>\r\n        <div> <input type=\"text\" onChange={handleChanges}/>  </div> \r\n        <p>Filter Type <select onChange={handleFilterChanges}><option value={FNAME} >First Name</option> <option value={LNAME}>Last Name</option> </select></p>\r\n        <h1>Actors</h1>\r\n    <Row> {carRows}</Row> </div>);\r\n}\r\n\r\n\r\nexport default CardArray;","F:\\projects\\react\\moviedb\\src\\components\\MovieCard.js",[],"F:\\projects\\react\\moviedb\\src\\models\\Movie.js",["60"],"F:\\projects\\react\\moviedb\\src\\pages\\home.js",["61"],"F:\\projects\\react\\moviedb\\src\\pages\\Home.js",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":10,"column":10,"nodeType":"69","messageId":"70","endLine":10,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":11,"column":9,"nodeType":"69","messageId":"70","endLine":11,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":32,"column":3,"nodeType":"74","endLine":32,"endColumn":19,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":32,"column":4,"nodeType":"77","endLine":32,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":59,"column":55,"nodeType":"77","messageId":"80","endLine":59,"endColumn":57},{"ruleId":"63","replacedBy":"81"},{"ruleId":"65","replacedBy":"82"},{"ruleId":"72","severity":1,"message":"83","line":26,"column":19,"nodeType":"84","endLine":26,"endColumn":91},{"ruleId":"78","severity":1,"message":"85","line":45,"column":21,"nodeType":"77","messageId":"80","endLine":45,"endColumn":23},{"ruleId":"67","severity":1,"message":"86","line":1,"column":7,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"87","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":4,"column":9,"nodeType":"90","endLine":4,"endColumn":223},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setContents' needs the current value of 'movies'.","ArrayExpression",["93"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression","eqeqeq","Expected '!==' and instead saw '!='.","unexpected",["91"],["92"],"Assignments to the 'carRows' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","Expected '===' and instead saw '=='.","'Movie' is defined but never used.","'Home' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [movies]",{"range":"96","text":"97"},[1163,1179],"[movies]"]